generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  username   String      @unique
  email      String      @unique
  password   String
  isAdmin    Boolean     @default(false)
  info       Info[]      @relation("UserInfo") // Change to a one-to-many relationship
  createdAt  DateTime    @default(now())
  complaints Complaint[]
}

model Info {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  instituteId String?
  hostel      String?
  room        Int?
  hobbies     String?
  userId      String? @db.ObjectId // Foreign key
  user        User?   @relation("UserInfo", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Complaint {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  userId      String            @db.ObjectId
  description String // Description of the problem
  category    ComplaintCategory // Category of the complaint (e.g., Toilet, Water, Fan, Light)
  status      ComplaintStatus   @default(PENDING) // Status of the complaint
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum ComplaintCategory {
  TOILET
  WATER
  FAN
  LIGHT
  OTHER // For any other issues
}

enum ComplaintStatus {
  PENDING
  RESOLVED
  IN_PROGRESS // Optional: if you want to track complaints that are being worked on
}
